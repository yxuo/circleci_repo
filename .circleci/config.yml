version: 2.1

jobs:
  build:
    docker:
      - image: cimg/node:20.15.1
    steps:
      - checkout
      - run:
          name: Rodar Playwright
          command: echo "Playwright tests are now run in a separate job after the build step."
            # git clone https://github.com/yxuo/circleci_playwright
            # cd circleci_playwright
            # npm install
            # npx playwright install
            # npx playwright install-deps
            # npx playwright test --project=test-project

# Novo job para rodar Playwright após deploy alpha
  playwright_alpha_test:
    docker:
      - image: cimg/node:20.15.1
    steps:
      - checkout
      - run:
          name: Clonar e instalar dependências
          command: |
            git clone https://github.com/yxuo/circleci_playwright
            cd circleci_playwright
            npm install
            npx playwright install
            npx playwright install-deps
      - run:
          name: Rodar testes Playwright e gerar report
          command: |
            cd circleci_playwright; mkdir output
            npx playwright test --project=test-project > ./output/playwright_output.log; exit_code=$?; echo $exit_code > ./output/playwright_exit_code.txt; exit $exit_code

      - run:
          name: Extrair resumo dos testes
          command: |
            cd circleci_playwright
            npx playwright show-report
      - store_artifacts:
          path: circleci_playwright/playwright-report
          destination: playwright-report
      - run:
          name: Notificar Google Chat
          command: |
            cd circleci_playwright
            if [ ! -f test-results/results.json ]; then
              MSG="Backend - Teste alpha: Não foi possível encontrar o arquivo de resultados."
            else
              TOTAL=$(jq '[.suites[].specs[] | .tests | length] | add' test-results/results.json)
              FAILED=$(jq '[.suites[].specs[] | .tests[] | select(.results[].status=="failed")] | length' test-results/results.json)
              if [ -z "$FAILED" ]; then FAILED=0; fi
              if [ -z "$TOTAL" ]; then TOTAL=0; fi
              if [ "$FAILED" -gt 0 ]; then
                MSG="Backend - Teste alpha: $FAILED erro(s) de $TOTAL testes. Report: $CIRCLE_BUILD_URL/artifacts/0/circleci_playwright/playwright-report/index.html"
              else
                MSG="Backend - Teste alpha: Todos os $TOTAL testes passaram. Report: $CIRCLE_BUILD_URL/artifacts/0/circleci_playwright/playwright-report/index.html"
              fi
            fi
            curl --header "Content-Type: application/json" \
              --request POST \
              --data "{\"text\":\"$MSG\"}" \
              "https://chat.googleapis.com/v1/spaces/AAQAB2H7-7I/messages?key=AIzaSyDdI0hCZtE6vySjMm-WEfRq3CPzqKqqsHI&token=IVVUiHFtrYOqxXruVdtf3w2KP4DlejBelwgoTJQmIUQ"

workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - playwright_alpha_test:
          requires:
            - build
